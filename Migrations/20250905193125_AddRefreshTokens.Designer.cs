// <auto-generated />
using System;
using ExpenseTrackerAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExpenseTrackerAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250905193125_AddRefreshTokens")]
    partial class AddRefreshTokens
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExpenseTrackerAPI.Models.Budget", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.ToTable("budget", (string)null);
                });

            modelBuilder.Entity("ExpenseTrackerAPI.Models.Category", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("category", (string)null);

                    b.HasData(
                        new
                        {
                            id = new Guid("11111111-1111-1111-1111-111111111111"),
                            created_at = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            name = "Housing"
                        },
                        new
                        {
                            id = new Guid("22222222-2222-2222-2222-222222222222"),
                            created_at = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            name = "Rent"
                        },
                        new
                        {
                            id = new Guid("33333333-3333-3333-3333-333333333333"),
                            created_at = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            name = "Savings"
                        },
                        new
                        {
                            id = new Guid("44444444-4444-4444-4444-444444444444"),
                            created_at = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            name = "Transportation"
                        },
                        new
                        {
                            id = new Guid("55555555-5555-5555-5555-555555555555"),
                            created_at = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            name = "Shopping"
                        },
                        new
                        {
                            id = new Guid("66666666-6666-6666-6666-666666666666"),
                            created_at = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            name = "Utilities"
                        });
                });

            modelBuilder.Entity("ExpenseTrackerAPI.Models.Expense", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("category_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<DateTime>("expense_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("is_recurring")
                        .HasColumnType("boolean");

                    b.Property<string>("payment_method")
                        .HasColumnType("text");

                    b.Property<string>("receipt_url")
                        .HasColumnType("text");

                    b.Property<DateTime?>("recurring_end_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("recurring_frequency")
                        .HasColumnType("text");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.ToTable("expense", (string)null);
                });

            modelBuilder.Entity("ExpenseTrackerAPI.Models.UserAccount", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password_hashed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("user_account", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
